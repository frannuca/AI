<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
   <FileVersion major="1" minor="6" />
   <Project>
      <Option title="NLP" />
      <Option makefile_is_custom="1" />
      <Option compiler="gcc" />
      <Option virtualFolders="CMake Files\;CMake Files\NLP\;CMake Files\RBM\;CMake Files\Optimizers\;CMake Files\tests\;" />
      <Build>
      <Target title="all">
         <Option working_dir="/home/fran/code/AI/NLP" />
         <Option type="4" />
         <MakeCommands>
            <Build command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 all" />
            <CompileFile command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 &quot;$file&quot;" />
            <Clean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
            <DistClean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
         </MakeCommands>
      </Target>
      <Target title="NLP">
         <Option output="/home/fran/code/AI/build/libNLP.so" prefix_auto="0" extension_auto="0" />
         <Option working_dir="/home/fran/code/AI/NLP" />
         <Option object_output="./" />
         <Option type="3" />
         <Option compiler="gcc" />
         <Compiler>
            <Add option="-DBOOST_TEST_DYN_LINK" />
            <Add directory="/home/fran/code/AI" />
            <Add directory="/home/fran/code/AI/NLP/include" />
            <Add directory="/home/fran/code/AI/NLP/src" />
            <Add directory="/home/fran/code/AI/include" />
            <Add directory="/usr/include" />
            <Add directory="/usr/include/c++/5" />
            <Add directory="/usr/include/c++/5/backward" />
            <Add directory="/usr/include/x86_64-linux-gnu" />
            <Add directory="/usr/include/x86_64-linux-gnu/c++/5" />
            <Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include" />
            <Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed" />
            <Add directory="/usr/local/include" />
         </Compiler>
         <MakeCommands>
            <Build command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 NLP" />
            <CompileFile command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 &quot;$file&quot;" />
            <Clean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
            <DistClean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
         </MakeCommands>
      </Target>
      <Target title="NLP/fast">
         <Option output="/home/fran/code/AI/build/libNLP.so" prefix_auto="0" extension_auto="0" />
         <Option working_dir="/home/fran/code/AI/NLP" />
         <Option object_output="./" />
         <Option type="3" />
         <Option compiler="gcc" />
         <Compiler>
            <Add option="-DBOOST_TEST_DYN_LINK" />
            <Add directory="/home/fran/code/AI" />
            <Add directory="/home/fran/code/AI/NLP/include" />
            <Add directory="/home/fran/code/AI/NLP/src" />
            <Add directory="/home/fran/code/AI/include" />
            <Add directory="/usr/include" />
            <Add directory="/usr/include/c++/5" />
            <Add directory="/usr/include/c++/5/backward" />
            <Add directory="/usr/include/x86_64-linux-gnu" />
            <Add directory="/usr/include/x86_64-linux-gnu/c++/5" />
            <Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include" />
            <Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed" />
            <Add directory="/usr/local/include" />
         </Compiler>
         <MakeCommands>
            <Build command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 NLP/fast" />
            <CompileFile command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 &quot;$file&quot;" />
            <Clean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
            <DistClean command="/usr/bin/make -f &quot;/home/fran/code/AI/NLP/Makefile&quot;  VERBOSE=1 clean" />
         </MakeCommands>
      </Target>
      </Build>
      <Unit filename="/home/fran/code/AI/NLP/include/AI_Types.h">
         <Option target="NLP"/>
      </Unit>
      <Unit filename="/home/fran/code/AI/NLP/include/word2vec.h">
         <Option target="NLP"/>
      </Unit>
      <Unit filename="/home/fran/code/AI/NLP/src/word2vec.cpp">
         <Option target="NLP"/>
      </Unit>
      <Unit filename="/home/fran/code/AI/CMakeLists.txt">
          <Option virtualFolder="CMake Files\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/NLP/CMakeLists.txt">
          <Option virtualFolder="CMake Files\NLP\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/NLP/CMakeLists.txt">
          <Option virtualFolder="CMake Files\NLP\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/RBM/CMakeLists.txt">
          <Option virtualFolder="CMake Files\RBM\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/RBM/CMakeLists.txt">
          <Option virtualFolder="CMake Files\RBM\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/Optimizers/CMakeLists.txt">
          <Option virtualFolder="CMake Files\Optimizers\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/Optimizers/CMakeLists.txt">
          <Option virtualFolder="CMake Files\Optimizers\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/tests/CMakeLists.txt">
          <Option virtualFolder="CMake Files\tests\" />
      </Unit>
      <Unit filename="/home/fran/code/AI/tests/CMakeLists.txt">
          <Option virtualFolder="CMake Files\tests\" />
      </Unit>
   </Project>
</CodeBlocks_project_file>
